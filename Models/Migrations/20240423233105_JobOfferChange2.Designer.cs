// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace Models.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240423233105_JobOfferChange2")]
    partial class JobOfferChange2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Models.Apply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("JobOfferID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MotivationLetterID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("JobOfferID");

                    b.HasIndex("MotivationLetterID");

                    b.ToTable("Applies");
                });

            modelBuilder.Entity("Models.Entreprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Infos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Entreprises");
                });

            modelBuilder.Entity("Models.JobOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EntrepriseID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("addDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("sId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EntrepriseID");

                    b.ToTable("JobOffers");
                });

            modelBuilder.Entity("Models.MotivationLetter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserApplierID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserApplierID");

                    b.ToTable("MotivationLetters");
                });

            modelBuilder.Entity("Models.UserApplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HomeLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserAppliers");
                });

            modelBuilder.Entity("Models.Apply", b =>
                {
                    b.HasOne("Models.JobOffer", "JobOffer")
                        .WithMany("Applies")
                        .HasForeignKey("JobOfferID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.MotivationLetter", "MotivationLetter")
                        .WithMany("Applies")
                        .HasForeignKey("MotivationLetterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobOffer");

                    b.Navigation("MotivationLetter");
                });

            modelBuilder.Entity("Models.JobOffer", b =>
                {
                    b.HasOne("Models.Entreprise", "Entreprise")
                        .WithMany("JobOffers")
                        .HasForeignKey("EntrepriseID");

                    b.Navigation("Entreprise");
                });

            modelBuilder.Entity("Models.MotivationLetter", b =>
                {
                    b.HasOne("Models.UserApplier", "Applier")
                        .WithMany("Letters")
                        .HasForeignKey("UserApplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applier");
                });

            modelBuilder.Entity("Models.Entreprise", b =>
                {
                    b.Navigation("JobOffers");
                });

            modelBuilder.Entity("Models.JobOffer", b =>
                {
                    b.Navigation("Applies");
                });

            modelBuilder.Entity("Models.MotivationLetter", b =>
                {
                    b.Navigation("Applies");
                });

            modelBuilder.Entity("Models.UserApplier", b =>
                {
                    b.Navigation("Letters");
                });
#pragma warning restore 612, 618
        }
    }
}
